{"version":3,"sources":["components/telBook/telBook.module.css","components/telBook/telInput/contactList.module.css","components/telBook/telInput/contactListFind.module.css","redux/telBookReducers.js","components/telBook/telInput/ContactList.js","redux/store.js","components/telBook/telInput/FindInput.js","components/telBook/telInput/contactForm/TelInput.js","components/telBook/telInput/contactForm/ContactForm.js","components/telBook/TelBook.js","components/App.js","index.js"],"names":["module","exports","telBookReducers","createSlice","name","initialState","contacts","items","filter","reducers","addContacts","state","type","payload","deleteContacts","el","id","filterContacts","connect","toLowerCase","includes","dispatch","useDispatch","actions","TransitionGroup","component","map","CSSTransition","classNames","styles","key","timeout","className","listItems","text","number","Button","variant","color","onClick","persistConfig","storage","reducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","useStyles","makeStyles","theme","root","margin","spacing","width","display","FindInput","prop","classes","unmountOnExit","in","getState","length","TextField","label","onChange","TelInput","style","value","useState","allertShow","setAllertShow","setName","setNumber","handleChange","target","alert","noValidate","autoComplete","onSubmit","evt","preventDefault","find","setTimeout","uuidv4","body","appear","title","event","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20b46e41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"telBook_enter___pT9O\",\"enterActive\":\"telBook_enterActive__1f3ra\",\"exit\":\"telBook_exit__22eNV\",\"exitActive\":\"telBook_exitActive__29vGZ\",\"appear\":\"telBook_appear__2Qytx\",\"appearActive\":\"telBook_appearActive__OL80B\",\"alert\":\"telBook_alert__3gQiK\",\"body\":\"telBook_body__3Q1LF\",\"title\":\"telBook_title__3-IVh\",\"form\":\"telBook_form__3XuYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactList_enter__1RHcp\",\"enterActive\":\"contactList_enterActive__wo0LZ\",\"exit\":\"contactList_exit__2jKBL\",\"exitActive\":\"contactList_exitActive__12-65\",\"listItems\":\"contactList_listItems__KfvfV\",\"text\":\"contactList_text__3pANK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactListFind_enter__1N5aR\",\"enterActive\":\"contactListFind_enterActive__wpe88\",\"exit\":\"contactListFind_exit__2DFc9\",\"exitActive\":\"contactListFind_exitActive__1-BKM\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nexport const telBookReducers = createSlice({\r\n  name: \"@contacts\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    addContacts: (state, { type, payload }) => ({\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: [...state.contacts.items, payload],\r\n      },\r\n    }),\r\n    deleteContacts: (state, { type, payload }) => ({\r\n      contacts: {\r\n        ...state.contacts,\r\n        items: state.contacts.items.filter((el) => el.id !== payload),\r\n      },\r\n    }),\r\n    filterContacts: (state, { type, payload }) => ({\r\n      contacts: {\r\n        ...state.contacts,\r\n        filter: payload,\r\n      },\r\n    }),\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./contactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { telBookReducers } from \"../../../redux/telBookReducers\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    actions: { deleteContacts },\r\n  } = telBookReducers;\r\n  return (\r\n    <>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map((el) => (\r\n          <CSSTransition classNames={styles} key={el.id} timeout={250}>\r\n            <li key={el.id} className={styles.listItems}>\r\n              <p className={styles.text}>{el.name}</p>\r\n              <p className={styles.text}>{el.number}</p>\r\n\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => dispatch(deleteContacts(el.id))}\r\n              >\r\n                DELETE\r\n              </Button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.filter\r\n      ? state.contacts.items.filter((el) =>\r\n          el.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n        )\r\n      : state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import { telBookReducers } from \"./telBookReducers\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst { reducer } = telBookReducers;\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\npersistStore(store);\r\nexport default store;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./contactListFind.module.css\";\r\nimport store from \"../../../redux/store\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nexport function FindInput(prop) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        classNames={styles}\r\n        timeout={500}\r\n        unmountOnExit\r\n        in={store.getState().contacts.items.length > 1}\r\n      >\r\n        <TextField\r\n          className={classes.root}\r\n          id=\"outlined-basic\"\r\n          label=\"Find contacts by name\"\r\n          variant=\"outlined\"\r\n          name=\"filter\"\r\n          onChange={prop.onChange}\r\n        />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      // margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function TelInput(prop) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        className={classes.root}\r\n        style={{ width: 200, margin: 10 }}\r\n        id=\"outlined-basic\"\r\n        label={prop.name}\r\n        variant=\"outlined\"\r\n        name={prop.name}\r\n        onChange={prop.onChange}\r\n        value={prop.value}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TelInput } from \"./TelInput\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"../../telBook.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { telBookReducers } from \"../../../../redux/telBookReducers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"400px\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContactForm({ contacts }) {\r\n  const [allertShow, setAllertShow] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    actions: { addContacts },\r\n  } = telBookReducers;\r\n\r\n  function handleChange({ target }) {\r\n    const { name, value } = target;\r\n\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    } else if (name === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const lookingFor = contacts.find((el) => el.name === name);\r\n    if (lookingFor) {\r\n      setAllertShow(true);\r\n      setTimeout(() => {\r\n        setAllertShow(false);\r\n      }, 3000);\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    } else {\r\n      dispatch(\r\n        addContacts({\r\n          id: uuidv4(),\r\n          name: name,\r\n          number: number,\r\n        })\r\n      );\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <CSSTransition timeout={5000} classNames={styles} in={allertShow}>\r\n        <div className={styles.alert}>\r\n          <p>This contact already in phonebook</p>\r\n        </div>\r\n      </CSSTransition>\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n        className={classes.root}\r\n      >\r\n        <TelInput name={\"name\"} onChange={handleChange} value={name} />\r\n        <TelInput name={\"number\"} onChange={handleChange} value={number} />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"input\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.filter\r\n      ? state.contacts.items.filter((el) =>\r\n          el.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n        )\r\n      : state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport ContactList from \"./telInput/ContactList\";\r\nimport { FindInput } from \"./telInput/FindInput\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styles from \"./telBook.module.css\";\r\nimport ContactForm from \"./telInput/contactForm/ContactForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { telBookReducers } from \"../../redux/telBookReducers\";\r\n\r\nfunction TelBook({ contacts }) {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    actions: { filterContacts },\r\n  } = telBookReducers;\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <CSSTransition timeout={500} classNames={styles} appear unmountOnExit in>\r\n        <div>\r\n          <h2 className={styles.title}>Phonebook</h2>\r\n        </div>\r\n      </CSSTransition>\r\n      <ContactForm />\r\n      <h2 className={styles.title}>Contacts</h2>\r\n      <FindInput\r\n        onChange={(event) => dispatch(filterContacts(event.target.value))}\r\n        contacts={contacts}\r\n      />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.filter\r\n      ? state.contacts.items.filter((el) =>\r\n          el.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n        )\r\n      : state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TelBook);\r\n","import React, { Fragment } from \"react\";\r\nimport TelBook from \"./telBook/TelBook\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <TelBook />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}